# Important note: base64 encode your secrets before applying this file to your cluster.
# Avoid using web tools to encode your secrets, as they may be stored in their logs.
# Use the following command instead:
# echo -n "your-secret" | base64 -w 0
# For TLS, use the following command:
# cat your-cert.crt | base64 -w 0
---
apiVersion: v1
kind: Secret
metadata:
  name: ghostk8s-secrets
  namespace: ghostk8s
type: Opaque
data: # Needed by 05-ghost-ghostk8s.yaml
  url: your-secret-url-base64-encoded
  root-password: your-secret-root-password-base64-encoded
  database: your-secret-database-name-base64-encoded
  user: your-secret-user-base64-encoded
  password: your-secret-password-base64-encoded
  database-host: your-secret-database-host-base64-encoded
  port: your-secret-port-base64-encoded
  admin-url: your-secret-admin-url-base64-encoded
  smtp-service: your-secret-smtp-service-base64-encoded
  smtp-host: your-secret-smtp-host-base64-encoded
  smtp-user: your-secret-smtp-user-base64-encoded
  smtp-password: your-secret-smtp-password-base64-encoded
  
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
apiVersion: v1
kind: Secret
metadata:
  name: ghostk8s-cl-tls
  namespace: ghostk8s
type: kubernetes.io/tls
# The TLS secret must contain keys named 'tls.crt' and 'tls.key' that contain the certificate and private key to use for TLS.
# It's used in 04-service-ghostk8s.yaml as secretName: ghostk8s-cl-tls for the Ingress managed by Traefik. Other Ingress controllers may need a different configuration.
data:
  tls.crt: base64 encoded cert
  tls.key: base64 encoded key
