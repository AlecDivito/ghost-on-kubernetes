apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
  labels:
    app: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
  {{- include "ghost-on-kubernetes.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysqlGhostOnKubernetes.replicas }}
  selector:
    matchLabels:
      app: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
  serviceName: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
  template:
    metadata:
      labels:
        app: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - secretRef:
            name: {{ include "ghost-on-kubernetes.fullname" . }}-mysql-ghost-on-kubernetes
        image: {{ .Values.mysqlGhostOnKubernetes.mysqlGhostOnKubernetes.image.repository
          }}:{{ .Values.mysqlGhostOnKubernetes.mysqlGhostOnKubernetes.image.tag | default
          .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.mysqlGhostOnKubernetes.mysqlGhostOnKubernetes.imagePullPolicy
          }}
        name: {{ include "ghost-on-kubernetes.fullname" . }}-mysql
        ports:
        - containerPort: {{ .Values.mysqlGhostOnKubernetes.mysqlPort }}
          name: mysql
          protocol: TCP
          
        resources: {{- toYaml .Values.mysqlGhostOnKubernetes.mysqlGhostOnKubernetes.resources
          | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-ghost-on-kubernetes-pvc

  volumeClaimTemplates:
  - metadata:
      name: mysql-ghost-on-kubernetes-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.volumeClaimTemplates.mysql.storage }}
      storageClassName: {{ .Values.volumeClaimTemplates.mysql.storageClassName }}
      volumeMode: Filesystem